{"version":3,"sources":["components/Navigator.js","pages/HomePage.js","components/DashboardSider.js","components/CustomForm.js","components/OpenModal.js","components/EditAbleTable.js","components/SearchBox.js","components/DashboardContent.js","pages/DashboardPage.js","components/ActiveAccountForm.js","pages/ActiveAccountPage.js","components/LoginForm.js","pages/LoginPage.js","App.js","index.js"],"names":["SubMenu","Menu","Navigator","props","history","useHistory","useState","username","setUsername","current","setCurrent","useEffect","undefined","cookies","load","onClick","e","path","key","push","keys","Object","loadAll","console","log","forEach","remove","window","location","reload","logout","selectedKeys","mode","Item","className","src","icon","HomeOutlined","DashboardOutlined","disabled","title","ItemGroup","LoginOutlined","UserOutlined","LogoutOutlined","host","hostname","HomePage","style","backgroundImage","data-animation","data-delay","animationDelay","Component","DashboardSider","defaultMenu","setDefaultMenu","menus","setMenus","accountCategory","setAccountCategory","length","axios","post","jwt","then","response","data","status","account_category","message","error","defiWorkSpace","category","tempMenu","text","SolutionOutlined","ShoppingCartOutlined","ShopOutlined","AuditOutlined","InsertRowBelowOutlined","ApartmentOutlined","PicRightOutlined","defaultSelectedKeys","defaultOpenKeys","theme","menu","map","Option","Select","layout","labelCol","span","wrapperCol","tailLayout","offset","CustomForm","inputs","setInputs","Form","useForm","name","initialValues","onFinish","values","action","manage","success","finished","catch","err","put","id","onFinishFailed","errorInfo","Array","isArray","result","i","input","item","type","defaultValue","label","value","RangePicker","min","max","TextArea","rows","toString","rules","hidden","htmlType","showInput","OpenModal","React","visible","setVisible","confirmLoading","setConfirmLoading","setFinished","receiveFinished","onOk","setTimeout","a","document","getElementsByClassName","click","onCancel","required","categorys","customer","customer_ID","adults","childrens","order_detail_ID","order_detail","quantity","showContent","EditableContext","createContext","EditableRow","index","form","component","Provider","Link","transitive","transition","EditableCell","editable","children","dataIndex","record","handleSave","restProps","editing","setEditing","inputRef","useRef","useContext","focus","toggleEdit","setFieldsValue","save","Notiflix","Confirm","show","validateFields","width","borderRadius","errInfo","childNode","margin","ref","onPressEnter","onBlur","paddingRight","EditableTable","handleDelete","delete","handleGet","defineColumn","bind","saveSelect","state","columns","dataSource","count","this","setState","render","_","category_ID","onChange","onConfirm","account_ID","gender","area","available","price_on_day","room_category_name","room_category_ID","room_number","final","order_ID","check_in","total_pays","check_out","service_ID","price","total_pay","service_detail_ID","supply_type","supply_category_ID","room_code","supply_ID","list","prevProps","search","components","body","row","cell","col","onCell","rowClassName","bordered","Search","Input","SearchBox","onSearch","detail","searchResult","findText","placeholder","allowClear","enterButton","size","DashboardContent","setCategory","searchResults","setSearchResults","setTransition","receiveSearchResult","receiveTransition","transit","temp","category_name","customer_name","service_name","doubleCategory","supply_category_name","amount","order_url","Sider","Layout","Content","DashboardPage","setMenu","cat","ActiveAccountForm","newPassword","newPasswordConfirm","res","remember","Password","ActiveAccountPage","LoginForm","password","token","valuePropName","LoginPage","Header","Footer","App","exact","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f9fb1172.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Menu } from 'antd';\r\nimport { HomeOutlined, DashboardOutlined, LoginOutlined, UserOutlined, LogoutOutlined } from '@ant-design/icons';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../css/Navigator.css'\r\nimport cookies from 'react-cookies'\r\nconst { SubMenu } = Menu;\r\n\r\nconst Navigator = (props) => {\r\n  const history = useHistory();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [current, setCurrent] = useState(\"/\");\r\n\r\n\r\n  const logout = () => {\r\n    var keys = Object.keys(cookies.loadAll())\r\n    console.log(keys)\r\n    keys.forEach(key => {\r\n      cookies.remove(key)\r\n    })\r\n    history.push('/')\r\n    window.location.reload()\r\n  }\r\n\r\n  const handleClick = e => {\r\n    let path = e.key\r\n    setCurrent(path)\r\n    if (path === '/')\r\n      history.push('/')\r\n    else if (path === 'logout')\r\n      logout()\r\n    else history.push('/' + path)\r\n\r\n  }\r\n  useEffect(() => {\r\n    let token = cookies.load('jwt')\r\n    if (token !== undefined) {\r\n      setUsername(cookies.load('username'))\r\n    }\r\n\r\n  })\r\n  return (\r\n    <Menu onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\">\r\n      <Menu.Item key=\"/\" >\r\n        <img className=\"logo\" src=\"./images/logo.png\" />\r\n      </Menu.Item>\r\n      {username === '' ? <Menu.Item key=\"home\" icon={<HomeOutlined />}>\r\n        Home\r\n      </Menu.Item> : <Menu.Item key=\"dashboard\" icon={<DashboardOutlined />}>\r\n        Dashboard\r\n      </Menu.Item>}\r\n\r\n      <Menu.Item key=\"about\" >\r\n        About\r\n      </Menu.Item>\r\n      <SubMenu key=\"SubMenu\" disabled title=\"Navigation Three - Submenu\">\r\n        <Menu.ItemGroup title=\"Item 1\">\r\n          <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\r\n          <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\r\n        </Menu.ItemGroup>\r\n        <Menu.ItemGroup title=\"Item 2\">\r\n          <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\r\n          <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\r\n        </Menu.ItemGroup>\r\n      </SubMenu>\r\n      {cookies.load('jwt') === undefined ? (\r\n        <Menu.Item key=\"login\" icon={<LoginOutlined />}>\r\n          Đăng nhập\r\n        </Menu.Item>\r\n      ) : (\r\n        <>\r\n          <Menu.Item key=\"profile\" icon={<UserOutlined />}>\r\n            {username}\r\n          </Menu.Item>\r\n          <Menu.Item key=\"logout\" icon={<LogoutOutlined />}>\r\n            Đăng xuất\r\n          </Menu.Item>\r\n        </>\r\n      )}\r\n\r\n\r\n    </Menu>\r\n  );\r\n}\r\nexport default Navigator\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport '../css/HomePage.css'\r\nconst host = 'https://' + window.location.hostname\r\n\r\nexport default class HomePage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"landingview\" style={{ backgroundImage: `url(${host}/images/view.jpg)` }}>\r\n                <div className=\"h1-slider-caption\">\r\n                    <h1 data-animation=\"fadeInUp\" data-delay=\".4s\" className style={{ animationDelay: '0.4s' }}>sun department</h1>\r\n                    <h3 data-animation=\"fadeInDown\" data-delay=\".4s\" className style={{ animationDelay: '0.4s' }}>The Best Hotel &amp; Resourt</h3>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Menu, Button, message } from 'antd';\r\nimport {\r\n    UserOutlined,\r\n    MenuUnfoldOutlined,\r\n    MenuFoldOutlined,\r\n    SolutionOutlined,\r\n    ApartmentOutlined,\r\n    InsertRowBelowOutlined,\r\n    ShopOutlined,\r\n    AuditOutlined,\r\n    ShoppingCartOutlined,\r\n    PicRightOutlined\r\n} from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport cookies from 'react-cookies'\r\nimport { useHistory } from \"react-router-dom\";\r\nconst host = 'https://' + window.location.hostname\r\n\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst DashboardSider = (props) => {\r\n    const history = useHistory()\r\n    const [collapsed, setCollapsed] = useState(false)\r\n    const [defaultMenu, setDefaultMenu] = useState('')\r\n    const [menus, setMenus] = useState([])\r\n    const [accountCategory, setAccountCategory] = useState('')\r\n\r\n\r\n    const toggleCollapsed = () => {\r\n        setCollapsed(!collapsed)\r\n    }\r\n    const handleClick = e => {\r\n        let path = e.key\r\n        props.menu(path)\r\n    }\r\n    useEffect(() => {\r\n        if (menus.length === 0) {\r\n            axios.post(`${host}/account/valid`, { jwt: cookies.load('jwt') }).then(response => {\r\n                if (response.data.status) {\r\n                    setAccountCategory(response.data.account_category)\r\n                } else message.error(response.data.message)\r\n            })\r\n            defiWorkSpace(accountCategory)\r\n            props.category(accountCategory)\r\n        }\r\n\r\n    })\r\n    const defiWorkSpace = (category) => {\r\n        let tempMenu = []\r\n\r\n        switch (category) {\r\n            case \"nhansu\":\r\n                tempMenu.push({ key: \"account\", icon: <UserOutlined />, text: 'Quản lý tài khoản' })\r\n                setDefaultMenu('account')\r\n                break\r\n            case \"letan\":\r\n                tempMenu.push({ key: \"customer\", icon: <SolutionOutlined />, text: 'Quản lý khách hàng' })\r\n                tempMenu.push({ key: \"room_category\", icon: <SolutionOutlined />, text: 'Quản lý loại phòng' })\r\n                tempMenu.push({ key: \"order\", icon: <ShoppingCartOutlined />, text: 'Quản lý đơn đặt' })\r\n                tempMenu.push({ key: \"order_detail\", icon: <ShopOutlined />, text: 'Quản lý chi tiết đơn đặt' })\r\n                setDefaultMenu('customer')\r\n                tempMenu.push({ key: \"service\", icon: <AuditOutlined />, text: 'Quản lý dịch vụ' })\r\n                tempMenu.push({ key: \"service_detail\", icon: <AuditOutlined />, text: 'Quản lý chi tiết dịch vụ' })\r\n                break\r\n            case \"kinhdoanh\":\r\n                tempMenu.push({ key: \"room_category\", icon: <SolutionOutlined />, text: 'Quản lý loại phòng' })\r\n                setDefaultMenu('room_category')\r\n                tempMenu.push({ key: \"room\", icon: <InsertRowBelowOutlined />, text: 'Quản lý phòng' })\r\n                tempMenu.push({ key: \"order\", icon: <ShoppingCartOutlined />, text: 'Quản lý đơn đặt' })\r\n                break\r\n            case \"admin\":\r\n                tempMenu.push({ key: \"account\", icon: <UserOutlined />, text: 'Quản lý tài khoản' })\r\n                tempMenu.push({ key: \"customer\", icon: <SolutionOutlined />, text: 'Quản lý khách hàng' })\r\n                tempMenu.push({ key: \"room_category\", icon: <ApartmentOutlined />, text: 'Quản lý loại phòng' })\r\n                tempMenu.push({ key: \"room\", icon: <InsertRowBelowOutlined />, text: 'Quản lý phòng' })\r\n                tempMenu.push({ key: \"order\", icon: <ShoppingCartOutlined />, text: 'Quản lý đơn đặt' })\r\n                tempMenu.push({ key: \"order_detail\", icon: <ShopOutlined />, text: 'Quản lý chi tiết đơn đặt' })\r\n                tempMenu.push({ key: \"service\", icon: <AuditOutlined />, text: 'Quản lý dịch vụ' })\r\n                tempMenu.push({ key: \"service_detail\", icon: <AuditOutlined />, text: 'Quản lý chi tiết dịch vụ' })\r\n                tempMenu.push({ key: \"supply_category\", icon: <PicRightOutlined />, text: 'Quản lý loại tài sản' })\r\n                tempMenu.push({ key: \"room_supply\", icon: <PicRightOutlined />, text: 'Quản lý tài sản phòng' })\r\n                tempMenu.push({ key: \"department_supply\", icon: <PicRightOutlined />, text: 'Quản lý tài sản khách sạn' })\r\n                setDefaultMenu('account')\r\n                break\r\n            case 'dichvu':\r\n                tempMenu.push({ key: \"service\", icon: <AuditOutlined />, text: 'Quản lý dịch vụ' })\r\n                tempMenu.push({ key: \"service_detail\", icon: <AuditOutlined />, text: 'Quản lý chi tiết dịch vụ' })\r\n\r\n                break\r\n            case 'ketoan':\r\n                tempMenu.push({ key: \"supply_category\", icon: <PicRightOutlined />, text: 'Quản lý loại tài sản' })\r\n                tempMenu.push({ key: \"room_supply\", icon: <PicRightOutlined />, text: 'Quản lý tài sản phòng' })\r\n                tempMenu.push({ key: \"department_supply\", icon: <PicRightOutlined />, text: 'Quản lý tài sản khách sạn' })\r\n                break\r\n            case 'kithuat':\r\n                tempMenu.push({ key: \"room_supply\", icon: <PicRightOutlined />, text: 'Quản lý tài sản phòng' })\r\n                tempMenu.push({ key: \"department_supply\", icon: <PicRightOutlined />, text: 'Quản lý tài sản khách sạn' })\r\n            default:\r\n\r\n        }\r\n        setMenus(tempMenu)\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Menu\r\n                defaultSelectedKeys={[defaultMenu]}\r\n                defaultOpenKeys={[defaultMenu]}\r\n                mode=\"inline\"\r\n                theme=\"dark\"\r\n                onClick={handleClick}\r\n            >\r\n                {menus.map(menu => {\r\n                    return (\r\n                        <Menu.Item key={menu.key} className={menu.key + '-menu'} icon={menu.icon}>\r\n                            {menu.text}\r\n                        </Menu.Item>)\r\n                }\r\n                )}\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\nexport default DashboardSider\r\n","import { useState, useEffect } from 'react';\r\nimport { Form, Input, Button, Select, DatePicker, InputNumber, message } from 'antd';\r\nimport axios from 'axios';\r\nimport cookies from 'react-cookies';\r\nconst host = 'https://' + window.location.hostname\r\nconst { Option } = Select;\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nconst CustomForm = (props) => {\r\n    const [inputs, setInputs] = useState('')\r\n    const [form] = Form.useForm();\r\n\r\n    const onFinish = (values) => {\r\n        console.log(values)\r\n        values.jwt = cookies.load('jwt')\r\n\r\n        if (props.action === \"add\") {\r\n            axios.post(`${host}/${props.manage}/`, values).then(response => {\r\n                console.log(response)\r\n                if (response.data.status) {\r\n                    message.success(\"Thêm thành công\")\r\n                    props.finished(true)\r\n                } else {\r\n                    message.error(response.data.message)\r\n                    props.finished(false)\r\n                }\r\n            }).catch(err => {\r\n                message.error(err)\r\n            })\r\n        }\r\n        else if (props.action === \"update\") {\r\n            axios.put(`${host}/${props.manage}/${props.id}`, values).then(response => {\r\n                if (response.data.status) {\r\n                    message.success(\"Cập nhật thành công\")\r\n                    props.finished(true)\r\n                } else {\r\n                    message.error(response.data.message)\r\n                    props.finished(false)\r\n                }\r\n            }).catch(err => {\r\n                message.error(err)\r\n            })\r\n        }\r\n\r\n\r\n\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        props.finished(false)\r\n    };\r\n    useEffect(() => {\r\n        setInputs(props.inputs)\r\n    })\r\n    const showInput = () => {\r\n        let result = []\r\n\r\n        for (let i = 0; i < inputs.length; i++) {\r\n            let input = inputs[i]\r\n            let item\r\n            \r\n            switch (input.type) {\r\n                case \"select\":\r\n                    item = (<Select defaultValue={input.label}>\r\n                        { input.values.map((item =>\r\n                            <Option value={item.key}>{item.value}</Option>\r\n                        )) }\r\n                    </Select>)\r\n                    break\r\n                case \"normal\":\r\n                    item = (<Input />)\r\n                    break\r\n                case 'datetimepicker':\r\n                    item = (<DatePicker />)\r\n                    break\r\n                case 'rangepicker':\r\n                    item = (<DatePicker.RangePicker />)\r\n                    break\r\n                case 'number':\r\n                    item = (<InputNumber min={input.min} max={input.max} defaultValue={input.defaultValue} />)\r\n                    break\r\n                case 'textarea':\r\n                    item = (<Input.TextArea rows={input.rows} />)\r\n                    break\r\n                case 'disable':\r\n                    item = (<Input defaultValue={input.defaultValue.toString()} disabled />)\r\n                default:\r\n            }\r\n\r\n            result.push(\r\n                <Form.Item\r\n                    label={input.label}\r\n                    name={input.name}\r\n                    rules={input.rules}\r\n                >\r\n                    {item}\r\n                </Form.Item>)\r\n        }\r\n        result.push(<Form.Item {...tailLayout}>\r\n            <Button className=\"submit\" hidden type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form.Item>)\r\n        //console.log(result)\r\n        return result\r\n    }\r\n\r\n\r\n    return (\r\n        <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={props.initialValues}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n        >\r\n            {Array.isArray(inputs) ? showInput() : ''}\r\n\r\n        </Form>\r\n    );\r\n};\r\nexport default CustomForm","import React, { useEffect } from 'react';\r\nimport { Modal, Button, message, Avatar } from 'antd';\r\nimport CustomForm from './CustomForm';\r\n\r\n\r\nconst OpenModal = (props) => {\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\r\n  const [finished, setFinished] = React.useState(undefined);\r\n\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n  const receiveFinished = (value) => {\r\n    setFinished(value);\r\n  }\r\n\r\n\r\n  const handleOk = () => {\r\n    setConfirmLoading(true);\r\n    setTimeout(async () => {\r\n      await document.getElementsByClassName('submit')[0].click()\r\n    }, 2000);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n  };\r\n  useEffect(() => {\r\n    if (finished === true) {\r\n      setVisible(false);\r\n      setConfirmLoading(false);\r\n      props.finished(true)\r\n      setFinished(undefined);\r\n    }\r\n    else if (finished === false) {\r\n      setConfirmLoading(false)\r\n      props.finished(false)\r\n      setFinished(undefined);\r\n    }\r\n\r\n  })\r\n  const showContent = () => {\r\n    var inputs\r\n    var initialValues\r\n    switch (props.manage) {\r\n      case 'account':\r\n        inputs = [\r\n          {\r\n            label: \"Tên tài khoản\",\r\n            name: \"username\",\r\n            rules: [{ required: true, message: 'Xin nhập tên tài khoản!' }],\r\n            type: 'normal'\r\n          },\r\n          {\r\n            label: \"Email\",\r\n            name: \"email\",\r\n            rules: [{ required: true, message: 'Xin nhập email!' }],\r\n            type: 'normal'\r\n          },\r\n          {\r\n            label: \"Loại tài khoản\",\r\n            name: \"category_ID\",\r\n            type: \"select\",\r\n            values: props.categorys,\r\n            rules: [{ required: true, message: 'Xin nhập chọn loại tài khoản!' }],\r\n          }\r\n        ]\r\n        break\r\n      case 'customer':\r\n        inputs = [\r\n          {\r\n            label: \"Tên khách hàng\",\r\n            name: \"customer_name\",\r\n            type: 'normal',\r\n            rules: [{ required: true, message: 'Xin nhập tên tài khoản!' }]\r\n          },\r\n          {\r\n            label: 'Số điện thoại',\r\n            name: 'phone_number',\r\n            type: 'normal',\r\n            rules: [{ required: true, message: 'Xin nhập số điện thoại!' },\r\n            { min: 10, message: \"Xin nhập tối thiểu 10 số\" }]\r\n          },\r\n          {\r\n            label: 'Tuổi',\r\n            name: 'age',\r\n            type: 'normal',\r\n            rules: [{ required: true, message: 'Xin nhập tuổi!' }]\r\n          }\r\n          , {\r\n            label: \"Giới tính\",\r\n            name: \"gender\",\r\n            type: \"select\",\r\n            values: [\r\n              { key: \"nam\", value: \"Nam\" },\r\n              { key: \"Nữ\", value: \"Nữ\" },\r\n            ],\r\n            rules: [{ required: true, message: 'Xin nhập chọn giới tính!' }],\r\n          }, {\r\n            label: 'Số CMND',\r\n            name: 'identify_number',\r\n            type: 'normal',\r\n            rules: [\r\n              { required: true, message: 'Xin nhập số CMND!' },\r\n              { min: 10, message: \"Xin nhập tối thiểu 10 số\" }\r\n            ]\r\n          }\r\n        ]\r\n        break\r\n      case 'room_category':\r\n        inputs = [\r\n          {\r\n            label: \"Tên loại phòng\",\r\n            name: \"room_category_name\",\r\n            type: 'normal',\r\n            rules: [{ required: true, message: 'Xin nhập tên loại phòng!' }]\r\n          },\r\n          {\r\n            label: 'Giường đơn',\r\n            name: 'single_bed',\r\n            type: 'normal',\r\n            rules: [{ required: true, message: 'Xin nhập số giường đơn!' }]\r\n          },\r\n          {\r\n            label: 'Giường đôi',\r\n            name: 'double_bed',\r\n            type: 'normal',\r\n            rules: [{ required: true, message: 'Xin nhập số giường đôi' }]\r\n          }\r\n          , {\r\n            label: 'Diện tích (m2)',\r\n            name: 'area',\r\n            type: 'normal',\r\n            rules: [\r\n              { required: true, message: 'Xin nhập diện tích!' }\r\n            ]\r\n          },\r\n          {\r\n            label: 'Mô tả',\r\n            name: 'description',\r\n            type: 'normal',\r\n          }, {\r\n            label: 'Giá một ngày',\r\n            name: 'price_on_day',\r\n            type: 'normal',\r\n            rules: [\r\n              { required: true, message: 'Xin nhập mô tả!' }\r\n            ]\r\n          }\r\n        ]\r\n        break\r\n      case 'room':\r\n        inputs = [\r\n          {\r\n            label: \"Loại phòng\",\r\n            name: \"room_category_ID\",\r\n            type: \"select\",\r\n            values: props.categorys,\r\n            rules: [{ required: true, message: 'Xin nhập chọn loại phòng!' }],\r\n          }\r\n        ]\r\n        break\r\n      case 'order':\r\n        inputs = [{\r\n          label: 'ID khách hàng',\r\n          name: 'customer_ID',\r\n          defaultValue: props.customer,\r\n          type: 'disable'\r\n        },\r\n        {\r\n          label: \"Thời gian lưu trú\",\r\n          name: \"lenghtOfStay\",\r\n          type: \"rangepicker\",\r\n          rules: [{ required: true, message: 'Xin nhập thời gian lưu trú!' }]\r\n        },\r\n        {\r\n          label: \"Số người lớn\",\r\n          name: \"adults\",\r\n          type: 'number',\r\n          rules: [{ required: true, message: 'Xin nhập số người lớn!' }],\r\n          min: 1,\r\n          defaultValue: 1,\r\n          max: 10\r\n        },\r\n        {\r\n          label: \"Số trẻ em\",\r\n          name: \"childrens\",\r\n          type: 'number',\r\n          rules: [{ required: true, message: 'Xin nhập số trẻ em!' }],\r\n          min: 0,\r\n          defaultValue: 0,\r\n          max: 10\r\n        },\r\n        {\r\n          label: \"Yêu cầu đặc biệt\",\r\n          name: \"customer_required\",\r\n          type: \"textarea\",\r\n          rows: 4\r\n        }\r\n        ]\r\n        initialValues = { customer_ID: props.customer, adults: 1, childrens: 0 }\r\n        if (Array.isArray(props.categorys)) {\r\n          props.categorys.forEach(item => {\r\n            initialValues[item.key] = 0\r\n            inputs.push({\r\n              label: item.value,\r\n              name: item.key,\r\n              type: 'number',\r\n              min: 0,\r\n              defaultValue: 0,\r\n              max: item.max\r\n            })\r\n          })\r\n        }\r\n\r\n        break\r\n      case 'service':\r\n        inputs = [\r\n          {\r\n            label: \"Tên dịch vụ\",\r\n            name: \"service_name\",\r\n            type: 'normal',\r\n            rules: [{ required: true, message: 'Xin nhập tên dịch vụ!' }]\r\n          },\r\n          {\r\n            label: \"Tên nhân viên\",\r\n            name: \"account_ID\",\r\n            type: \"select\",\r\n            values: props.categorys,\r\n            rules: [{ required: true, message: 'Xin nhập chọn nhân viên!' }],\r\n          },\r\n          {\r\n            label: 'Mô tả',\r\n            name: 'description',\r\n            type: 'normal',\r\n          }, {\r\n            label: 'Giá dịch vụ',\r\n            name: 'price',\r\n            type: 'normal',\r\n            rules: [\r\n              { required: true, message: 'Xin nhập giá dịch vụ!' },\r\n              { min: 4, message: 'Xin nhập ít nhập 1000 VNĐ' }\r\n            ]\r\n          }\r\n        ]\r\n        break\r\n      case 'service_detail':\r\n        initialValues = { order_detail_ID: props.order_detail, quantity: 1 }\r\n        inputs = [{\r\n          label: 'ID chi tiết đơn',\r\n          name: 'order_detail_ID',\r\n          defaultValue: props.order_detail,\r\n          type: 'disable'\r\n        },\r\n        {\r\n          label: \"Loại dịch vụ\",\r\n          name: \"service_ID\",\r\n          type: \"select\",\r\n          values: props.categorys,\r\n          rules: [{ required: true, message: 'Xin nhập chọn loại dịch vụ!' }],\r\n        },\r\n        {\r\n          label: 'Số lượng',\r\n          name: 'quantity',\r\n          type: 'normal',\r\n          rules: [\r\n            { required: true, message: 'Xin nhập số lượng!' },\r\n          ],\r\n          min: 1,\r\n          defaultValue: 1,\r\n        }\r\n        ]\r\n        break\r\n      case 'supply_category':\r\n        inputs = [{\r\n          label: 'Tên loại tài sản',\r\n          name: 'supply_category_name',\r\n          type: 'normal',\r\n          rules: [\r\n            { required: true, message: 'Xin nhập tên loại tài sản!' },\r\n          ],\r\n        }, {\r\n          label: \"Loại sở hữu\",\r\n          name: \"supply_type\",\r\n          type: \"select\",\r\n          values: [\r\n            { key: \"room\", value: \"Phòng\" },\r\n            { key: \"department\", value: \"Khách sạn\" },\r\n          ],\r\n          rules: [{ required: true, message: 'Xin nhập loại sở hữu!' }],\r\n        }]\r\n        break\r\n      case 'room_supply':\r\n\r\n        inputs = [{\r\n          label: 'Tên tài sản',\r\n          name: 'supply_name',\r\n          type: 'normal',\r\n        },\r\n        {\r\n          label: \"Chọn phòng\",\r\n          name: \"room_code\",\r\n          type: \"select\",\r\n          values: props.categorys[0],\r\n          rules: [{ required: true, message: 'Xin nhập phòng!' }],\r\n        },\r\n        {\r\n          label: \"Loại tài sản\",\r\n          name: \"supply_category_ID\",\r\n          type: \"select\",\r\n          values: props.categorys[1],\r\n          rules: [{ required: true, message: 'Xin nhập loại sở hữu!' }],\r\n        }]\r\n        break\r\n      case 'department_supply':\r\n        inputs = [{\r\n          label: 'Tên tài sản',\r\n          name: 'supply_name',\r\n          type: 'normal',\r\n        },\r\n        {\r\n          label: \"Loại tài sản\",\r\n          name: \"supply_category_ID\",\r\n          type: \"select\",\r\n          values: props.categorys,\r\n          rules: [{ required: true, message: 'Xin nhập loại sở hữu!' }],\r\n        }]\r\n        break\r\n      default:\r\n\r\n    }\r\n\r\n\r\n    return <CustomForm manage={props.manage} inputs={inputs} finished={receiveFinished} action={props.action === undefined ? \"add\" : props.action} initialValues={initialValues} />\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        {props.title}\r\n      </Button>\r\n      <Modal\r\n        title={props.title}\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n      >\r\n        {showContent()}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OpenModal","import React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport { Table, Input, Button, Popconfirm, Form, Select, Row, message } from 'antd';\r\nimport Notiflix from \"notiflix\";\r\nimport OpenModal from './OpenModal';\r\nimport axios from 'axios'\r\nimport cookies from 'react-cookies'\r\nconst host = 'https://' + window.location.hostname\r\nconst { Option } = Select;\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n    const [form] = Form.useForm();\r\n    return (\r\n        <Form form={form} component={false}>\r\n            <EditableContext.Provider value={form}>\r\n                <tr {...props} />\r\n            </EditableContext.Provider>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst Link = (props) => {\r\n    const transitive = async () => {\r\n\r\n        props.component.props.transition({ manage: props.manage, value: props.value })\r\n    }\r\n    return (<a onClick={transitive}>{props.text === undefined ? props.value : props.text}</a>)\r\n}\r\nconst DetailButton = (props) => {\r\n    const transitive = async () => {\r\n        console.log(props.manage)\r\n        props.component.props.transition({ manage: props.manage, value: props.value })\r\n    }\r\n    return (<Button onClick={transitive}>{props.text === undefined ? props.value : props.text}</Button>)\r\n}\r\n\r\nconst EditableCell = ({\r\n    title,\r\n    editable,\r\n    children,\r\n    dataIndex,\r\n    record,\r\n    handleSave,\r\n    ...restProps\r\n}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const inputRef = useRef(null);\r\n    const form = useContext(EditableContext);\r\n    useEffect(() => {\r\n        if (editing) {\r\n            inputRef.current.focus();\r\n        }\r\n    }, [editing]);\r\n\r\n    const toggleEdit = () => {\r\n        setEditing(!editing);\r\n        form.setFieldsValue({\r\n            [dataIndex]: record[dataIndex],\r\n        });\r\n    };\r\n\r\n    const save = () => {\r\n        try {\r\n            Notiflix.Confirm.show(\r\n                'Xác nhận',\r\n                'Bạn có muốn lưu thông tin?',\r\n                'Đồng ý',\r\n                'Huỷ',\r\n\r\n                // ok button callback\r\n                async function () {\r\n                    const values = await form.validateFields()\r\n                    toggleEdit()\r\n                    handleSave({ ...record, ...values })\r\n                },\r\n\r\n                // cancel button callback\r\n                function () {\r\n                    toggleEdit()\r\n                },\r\n\r\n                // extend the init options for this confirm box\r\n                {\r\n                    width: '320px',\r\n                    borderRadius: '8px',\r\n                },\r\n            );\r\n\r\n\r\n        } catch (errInfo) {\r\n            console.log('Save failed:', errInfo);\r\n        }\r\n    };\r\n\r\n    let childNode = children;\r\n\r\n    if (editable) {\r\n        childNode = editing ? (<Form.Item\r\n            style={{\r\n                margin: 0,\r\n            }}\r\n            name={dataIndex}\r\n            rules={[\r\n                {\r\n                    required: true,\r\n                    message: `${title} is required.`,\r\n                },\r\n            ]}\r\n        >\r\n            <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n        </Form.Item>\r\n\r\n        ) : (\r\n            <div\r\n                className=\"editable-cell-value-wrap\"\r\n                style={{\r\n                    paddingRight: 24,\r\n                }}\r\n                onClick={toggleEdit}\r\n            >\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return <td {...restProps}>{childNode}</td>;\r\n}\r\n\r\n\r\nexport default class EditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.defineColumn = this.defineColumn.bind(this);\r\n        this.saveSelect = this.saveSelect.bind(this)\r\n        this.receiveFinished = this.receiveFinished.bind(this)\r\n        this.action = this.action.bind(this)\r\n        this.state = {\r\n            columns: [],\r\n            dataSource: [],\r\n            count: 0,\r\n        };\r\n    }\r\n\r\n    //important\r\n    defineColumn() {\r\n        switch (this.props.manage) {\r\n            case 'account':\r\n                this.setState({\r\n                    columns: [{\r\n                        title: 'Tên tài khoản',\r\n                        dataIndex: 'username',\r\n                        editable: this.props.accountCategory === \"admin\" ? true : false,\r\n                    },\r\n                    {\r\n                        title: 'Email',\r\n                        dataIndex: 'email',\r\n                        editable: this.props.accountCategory === \"admin\" ? true : false,\r\n                    },\r\n                    {\r\n                        title: 'Tạo lại mật khẩu',\r\n                        dataIndex: 'rePassword',\r\n                        render: (_, record) => {\r\n                            if (record.state === \"active\")\r\n                                return (<Button>Tạo lại</Button>)\r\n                        },\r\n                    },\r\n                    {\r\n                        title: 'Trạng thái',\r\n                        dataIndex: 'state',\r\n                    },\r\n                    {\r\n                        title: 'Loại tài khoản',\r\n                        dataIndex: 'category_ID',\r\n                        render: (_, record) => {\r\n\r\n                            return (\r\n                                <Select defaultValue={record.category_ID} onChange={(values) => {\r\n                                    record.category_ID = values\r\n                                    this.saveSelect(record)\r\n                                }}>\r\n                                    {Array.isArray(this.props.categorys) ? this.props.categorys.map(item =>\r\n                                        <Option value={item.key}>{item.value}</Option>\r\n                                    ) : ''}\r\n                                </Select>\r\n                            )\r\n                        }\r\n                    },\r\n                    {\r\n                        title: 'Xoá',\r\n                        dataIndex: 'delete',\r\n                        render: (_, record) =>\r\n                            this.state.dataSource.length >= 1 ? (\r\n                                <Popconfirm title=\"Bạn có muốn xoá?\" onConfirm={() => this.handleDelete(record.account_ID)}>\r\n                                    <a>Xoá</a>\r\n                                </Popconfirm>\r\n                            ) : null,\r\n                    },\r\n                    ]\r\n                })\r\n                break\r\n            case 'customer':\r\n                this.setState({\r\n                    columns: [{\r\n                        title: 'Tên khách hàng',\r\n                        dataIndex: 'customer_name',\r\n                        editable: true,\r\n                    },\r\n                    {\r\n                        title: 'Số điện thoại',\r\n                        dataIndex: 'phone_number',\r\n                        editable: true,\r\n                    },\r\n                    {\r\n                        title: 'Tuổi',\r\n                        dataIndex: 'age',\r\n                        editable: true,\r\n                    },\r\n                    {\r\n                        title: 'Giới tính',\r\n                        dataIndex: 'gender',\r\n                        render: (_, record) => {\r\n\r\n                            return (\r\n                                <Select defaultValue={record.gender} onChange={(values) => {\r\n                                    record.gender = values\r\n                                    this.saveSelect(record)\r\n                                }}>\r\n                                    <Option value={'Nam'}>Nam</Option>\r\n                                    <Option value={'Nữ'}>Nữ</Option>\r\n                                </Select>\r\n                            )\r\n                        }\r\n                    },\r\n                    {\r\n                        title: 'Số CMNN',\r\n                        dataIndex: 'identify_number',\r\n                        editable: true,\r\n                    },\r\n                    {\r\n                        title: 'Đặt phòng',\r\n                        dataIndex: 'booking',\r\n                        render: (_, record) => {\r\n\r\n                            return (<OpenModal title=\"Đặt phòng\" manage='order' customer={record.customer_ID} categorys={this.props.categorys} finished={this.receiveFinished} data={record} />)\r\n                        }\r\n                    },\r\n                    this.props.accountCategory === 'letan' ?\r\n                        {}\r\n                        : ({\r\n                            title: 'Xoá',\r\n                            dataIndex: 'delete',\r\n                            render: (_, record) =>\r\n                                this.state.dataSource.length >= 1 ? (\r\n                                    <Popconfirm title=\"Bạn có muốn xoá?\" onConfirm={() => this.handleDelete(record.customer_ID)}>\r\n                                        <a>Xoá</a>\r\n                                    </Popconfirm>\r\n                                ) : null,\r\n                        }),\r\n                    ]\r\n                })\r\n                break\r\n            case 'room_category':\r\n                this.setState({\r\n                    columns: [{\r\n                        title: 'Tên loại phòng',\r\n                        dataIndex: 'room_category_name',\r\n                        editable: this.props.accountCategory === \"letan\" ? false : true,\r\n                    },\r\n                    {\r\n                        title: 'Giường đơn',\r\n                        dataIndex: 'single_bed',\r\n                        editable: this.props.accountCategory === \"letan\" ? false : true,\r\n                    },\r\n                    {\r\n                        title: 'Giường đôi',\r\n                        dataIndex: 'double_bed',\r\n                        editable: this.props.accountCategory === \"letan\" ? false : true,\r\n                    },\r\n                    {\r\n                        title: 'Diện tích',\r\n                        dataIndex: 'area',\r\n                        editable: this.props.accountCategory === \"letan\" ? false : true,\r\n                        render: (_, record) => (record.area + ' m2')\r\n                    },\r\n                    this.props.accountCategory !== \"letan\" ?\r\n                        {\r\n                            title: 'Mô tả',\r\n                            dataIndex: 'description',\r\n                            editable: true,\r\n                        } : {},\r\n                    {\r\n                        title: 'Tình trạng',\r\n                        dataIndex: 'available',\r\n                        render: (_, record) => {\r\n                            if (record.available === 0)\r\n                                return \"Hết phòng\"\r\n                            else return `Còn ${record.available} phòng`\r\n                        }\r\n                    },\r\n                    {\r\n                        title: 'Giá một ngày',\r\n                        dataIndex: 'price_on_day',\r\n                        editable: this.props.accountCategory === \"letan\" ? false : true,\r\n                        render: (_, record) => (record.price_on_day + ' VNĐ')\r\n                    },\r\n                    {\r\n                        title: 'Chi tiết',\r\n                        dataIndex: 'detail',\r\n                        render: (_, record) => (<Link component={this} manage='room' value={record.room_category_name} text='Chi tiết' />)\r\n                    },\r\n                    this.props.accountCategory === 'letan' ?\r\n                        undefined\r\n                        : ({\r\n                            title: 'Xoá',\r\n                            dataIndex: 'delete',\r\n                            render: (_, record) =>\r\n                                this.state.dataSource.length >= 1 ? (\r\n                                    <Popconfirm title=\"Bạn có muốn xoá?\" onConfirm={() => this.handleDelete(record.room_category_ID)}>\r\n                                        <a>Xoá</a>\r\n                                    </Popconfirm>\r\n                                ) : null,\r\n                        }),\r\n                    ]\r\n                })\r\n                break\r\n            case 'room':\r\n                this.setState({\r\n                    columns: [{\r\n                        title: 'Tên phòng',\r\n                        dataIndex: 'room_category_name',\r\n                        render: (_, record) => (`${record.room_category_name} ${record.room_number}`)\r\n                    },\r\n                    {\r\n                        title: 'Trạng thái',\r\n                        dataIndex: 'state',\r\n                        render: (_, record) => {\r\n                            if (this.props.accountCategory === 'admin')\r\n                                return (\r\n                                    <Select defaultValue={record.state} onChange={(values) => {\r\n                                        record.state = values\r\n                                        this.saveSelect(record)\r\n                                    }}>\r\n                                        <Option value={'disable'}>Disable</Option>\r\n                                        <Option value={'empty'}>Empty</Option>\r\n                                        <Option value={'booked'}>Booked</Option>\r\n                                        <Option value={'using'}>Using</Option>\r\n                                    </Select>\r\n                                )\r\n                            else return record.state\r\n                        }\r\n                    },\r\n                    {\r\n                        title: 'Chi tiết',\r\n                        dataIndex: 'detail',\r\n                        render: (_, record) => (<Link component={this} manage='room_category' value={record.room_category_name} text='Chi tiết' />)\r\n                    },\r\n                    {\r\n                        title: 'Xoá',\r\n                        dataIndex: 'delete',\r\n                        render: (_, record) => {\r\n                            let max = record.room_number\r\n                            let final = true\r\n                            this.state.dataSource.forEach(item => {\r\n                                if (record.room_category_ID === item.room_category_ID) {\r\n                                    if (item.room_number > max)\r\n                                        final = false\r\n                                }\r\n                            })\r\n                            return (this.state.dataSource.length >= 1 ? (\r\n                                final ?\r\n                                    <Popconfirm title=\"Bạn có muốn xoá?\" onConfirm={() => this.handleDelete(record.room_category_ID + '.' + record.room_number)}>\r\n                                        <a>Xoá</a>\r\n                                    </Popconfirm> : ''\r\n                            ) : null)\r\n                        },\r\n                    },\r\n                    ]\r\n                })\r\n                break\r\n            case 'order':\r\n                this.setState({\r\n                    columns: [{\r\n                        title: 'ID đơn đặt',\r\n                        dataIndex: 'order_ID',\r\n                        render: (_, record) => <Link component={this} manage='order_detail' value={record.order_ID} />\r\n                    },\r\n                    {\r\n                        title: 'Tên khách đặt',\r\n                        dataIndex: 'customer_name',\r\n\r\n                        /*render: (_, record) => {\r\n                            return (\r\n                                <Select defaultValue={record.customer_ID} onChange={(values) => {\r\n                                    record.customer_ID = values\r\n                                    this.saveSelect(record)\r\n                                }} >\r\n                                    {\r\n                                        Array.isArray(this.props.categorys) ? this.props.categorys.map(item =>\r\n                                            <Option value={item.key}>{item.value}</Option>\r\n                                        ) : ''\r\n                                    }\r\n                                </Select >\r\n                            )\r\n                        }*/\r\n                    },\r\n                    {\r\n                        title: 'Nhân viên đặt',\r\n                        dataIndex: 'username',\r\n                        render: (_, record) => (<Link component={this} manage='account' value={record.account_ID} />)\r\n                    },\r\n                    {\r\n                        title: 'Số người lớn',\r\n                        dataIndex: 'adults',\r\n                        editable: true\r\n                    },\r\n                    {\r\n                        title: 'Số trẻ',\r\n                        dataIndex: 'childrens',\r\n                        editable: true\r\n                    },\r\n                    {\r\n                        title: 'Yêu cầu đặc biệt',\r\n                        dataIndex: 'customers_required',\r\n                        editable: true\r\n                    },\r\n                    {\r\n                        title: 'Xoá',\r\n                        dataIndex: 'delete',\r\n                        render: (_, record) => {\r\n                            return (this.state.dataSource.length >= 1 ?\r\n                                <Popconfirm title=\"Bạn có muốn xoá?\" onConfirm={() => this.handleDelete(record.order_ID)}>\r\n                                    <a>Xoá</a>\r\n                                </Popconfirm>\r\n                                : null)\r\n                        },\r\n                    },\r\n                    ]\r\n                })\r\n                break\r\n\r\n            case 'order_detail':\r\n                this.setState({\r\n                    columns: [{\r\n                        title: 'ID đơn đặt',\r\n                        dataIndex: 'order_ID',\r\n                        render: (_, record) => <Link component={this} manage='order' value={record.order_ID} />\r\n                    },\r\n                    {\r\n                        title: 'ID chi tiết',\r\n                        dataIndex: 'order_detail_ID',\r\n                    },\r\n                    {\r\n                        title: 'Tên phòng',\r\n                        dataIndex: 'room_category_name',\r\n                        render: (_, record) => (`${record.room_category_name} ${record.room_number}`)\r\n                    },\r\n                    {\r\n                        title: 'Check',\r\n                        dataIndex: 'check',\r\n                        render: (_, record) => {\r\n                            if (record.state !== 'paid') {\r\n                                if (record.check_in === null)\r\n                                    return <Button onClick={() => this.action({ path: `/order_detail/check_in/${record.order_detail_ID}` })} >Check in</Button>\r\n                                else if (record.check_in === null)\r\n                                    return <Button onClick={() => this.action({ path:`/order_detail/check_out/${record.order_detail_ID}` })} >Check out</Button>\r\n                                else return (<>\r\n                                    <Row><Button onClick={() => this.action({ path: `/order_detail/confirm_pay/${record.order_detail_ID}` })} >Tiền mặt {record.total_pays} VNĐ</Button></Row>\r\n                                    <Row><Button onClick={() => this.action({ path: '/payment', value: record.total_pays, action: 'post' })}>Zalo Pay</Button></Row>\r\n                                </>)\r\n                            }\r\n                            return 'Tất toán'\r\n                        }\r\n                    },\r\n                    {\r\n                        title: 'Tình trạng',\r\n                        dataIndex: 'state_order',\r\n                        render: (_, record) => {\r\n                            if (record.check_in === null) return 'Chưa check in'\r\n                            else if (record.check_out === null) return 'Đang thuê'\r\n                            else if (record.state === 'prepare') return `Cần thanh toán ${record.total_pays} VNĐ`\r\n                            else return 'Đã thanh toán'\r\n                        }\r\n                    },\r\n                    {\r\n                        title: 'Yêu cầu đặc biệt',\r\n                        dataIndex: 'customer_required',\r\n                        editable: true\r\n                    },\r\n                    {\r\n                        title: 'Thêm dịch vụ',\r\n                        dataIndex: 'service',\r\n                        render: (_, record) => {\r\n                            if (record.state !== 'prepare')\r\n                                return (<OpenModal title=\"Thêm dịch vụ\" manage='service_detail' order_detail={record.order_detail_ID} categorys={this.props.categorys} finished={this.receiveFinished} data={record} />)\r\n                        }\r\n                    },\r\n                    this.props.accountCategory === 'admin' ? {\r\n                        title: 'Xoá',\r\n                        dataIndex: 'delete',\r\n                        render: (_, record) => {\r\n                            return (this.state.dataSource.length >= 1 ?\r\n                                <Popconfirm title=\"Bạn có muốn xoá?\" onConfirm={() => this.handleDelete(record.order_detail_ID)}>\r\n                                    <a>Xoá</a>\r\n                                </Popconfirm>\r\n                                : null)\r\n                        },\r\n                    } : undefined,\r\n                    ]\r\n                })\r\n                break\r\n            case 'service':\r\n                this.setState({\r\n                    columns: [{\r\n                        title: 'Mã dịch vụ',\r\n                        dataIndex: 'service_ID',\r\n                        render: (_, record) => <Link component={this} manage='service_detail' value={record.service_ID} />\r\n                    }, {\r\n                        title: 'Tên dịch vụ',\r\n                        dataIndex: 'service_name',\r\n                        editable: this.props.accountCategory === \"letan\" ? false : true,\r\n                    },\r\n                    this.props.accountCategory === 'dichvu' ? undefined :\r\n                        {\r\n                            title: 'Tên nhân viên',\r\n                            dataIndex: 'username',\r\n\r\n                            render: (_, record) => {\r\n                                return this.props.accountCategory === 'admin' ? (\r\n                                    <Select defaultValue={record.account_ID} onChange={(values) => {\r\n                                        record.account_ID = values\r\n                                        this.saveSelect(record)\r\n                                    }} >\r\n                                        {\r\n                                            Array.isArray(this.props.categorys) ? this.props.categorys.map(item =>\r\n                                                <Option value={item.key}>{item.value}</Option>\r\n                                            ) : ''\r\n                                        }\r\n                                    </Select >\r\n                                ) : record.username\r\n                            }\r\n                        },\r\n                    {\r\n                        title: 'Mô tả',\r\n                        dataIndex: 'description',\r\n                        editable: this.props.accountCategory === \"letan\" ? false : true,\r\n                    },\r\n\r\n                    {\r\n                        title: 'Tình trạng',\r\n                        dataIndex: 'state',\r\n                        render: (_, record) => {\r\n                            if (this.props.accountCategory !== 'letan')\r\n                                return (\r\n                                    <Select defaultValue={record.state} onChange={(values) => {\r\n                                        record.state = values\r\n                                        this.saveSelect(record)\r\n                                    }}>\r\n                                        <Option value={'disabled'}>Bị vô hiệu</Option>\r\n                                        <Option value={'fixing'}>Đang sửa</Option>\r\n                                        <Option value={'sold_out'}>Hết hàng</Option>\r\n                                        <Option value={'available'}>Vẫn còn</Option>\r\n                                    </Select>\r\n                                )\r\n                            else return record.state\r\n                        }\r\n                    },\r\n                    {\r\n                        title: 'Giá ',\r\n                        dataIndex: 'price_on_day',\r\n                        editable: this.props.accountCategory === \"admin\" ? true : false,\r\n                        render: (_, record) => (record.price + ' VNĐ')\r\n                    },\r\n                    this.props.accountCategory === 'admin' ?\r\n                        {\r\n                            title: 'Xoá',\r\n                            dataIndex: 'delete',\r\n                            render: (_, record) =>\r\n                                this.state.dataSource.length >= 1 ? (\r\n                                    <Popconfirm title=\"Bạn có muốn xoá?\" onConfirm={() => this.handleDelete(record.service_ID)}>\r\n                                        <a>Xoá</a>\r\n                                    </Popconfirm>\r\n                                ) : null,\r\n                        } : undefined,\r\n                    ]\r\n                })\r\n                break\r\n            case 'service_detail':\r\n                this.setState({\r\n                    columns: [\r\n                        {\r\n                            title: 'Mã chi tiết dịch vụ',\r\n                            dataIndex: 'service_detail_ID',\r\n                        },\r\n                        {\r\n                            title: 'Loại dịch vụ',\r\n                            dataIndex: 'service_ID',\r\n                            render: (_, record) => {\r\n                                return this.props.accountCategory === 'admin' ? (\r\n                                    <Select defaultValue={record.service_ID} onChange={(values) => {\r\n                                        record.service_ID = values\r\n                                        this.saveSelect(record)\r\n                                    }} >\r\n                                        {\r\n                                            Array.isArray(this.props.categorys) ? this.props.categorys.map(item =>\r\n                                                <Option value={item.key}>{item.value}</Option>\r\n                                            ) : ''\r\n                                        }\r\n                                    </Select >\r\n                                ) : record.service_ID\r\n                            }\r\n                        },\r\n                        {\r\n                            title: 'Mã chi tiết đơn',\r\n                            dataIndex: 'order_detail_ID',\r\n                            render: (_, record) => <Link component={this} manage='order_detail' value={record.order_detail_ID} />\r\n                        },\r\n                        {\r\n                            title: 'Số lượng',\r\n                            dataIndex: 'quantity'\r\n                        },\r\n                        {\r\n                            title: 'Giá',\r\n                            dataIndex: 'price',\r\n                            render: (_, record) => record.price + ' VNĐ'\r\n                        },\r\n                        {\r\n                            title: 'Tổng công',\r\n                            dataIndex: 'total_pay',\r\n                            render: (_, record) => record.total_pay + ' VNĐ'\r\n                        },\r\n                        {\r\n                            title: 'Xoá',\r\n                            dataIndex: 'delete',\r\n                            render: (_, record) => {\r\n                                return (this.state.dataSource.length >= 1 ? (\r\n                                    <Popconfirm title=\"Bạn có muốn xoá?\" onConfirm={() => this.handleDelete(record.service_detail_ID)}>\r\n                                        <a>Xoá</a>\r\n                                    </Popconfirm>\r\n                                ) : undefined)\r\n                            },\r\n                        },\r\n                    ]\r\n                })\r\n                break\r\n            case 'supply_category':\r\n                this.setState({\r\n                    columns: [{\r\n                        title: 'Tên loại dịch vụ',\r\n                        dataIndex: 'supply_category_name',\r\n                        editable: this.props.accountCategory === \"admin\" ? true : false,\r\n                    },\r\n                    {\r\n                        title: 'Loại sỡ hữu',\r\n                        dataIndex: 'supply_type',\r\n                        render: (_, record) => {\r\n                            if (this.props.accountCategory === 'admin')\r\n                                return (\r\n                                    <Select defaultValue={record.supply_type} onChange={(values) => {\r\n                                        record.supply_type = values\r\n                                        this.saveSelect(record)\r\n                                    }}>\r\n                                        <Option value={'room'}>Phòng</Option>\r\n                                        <Option value={'department'}>Khách sạn</Option>\r\n                                    </Select>\r\n                                )\r\n                            else return record.state\r\n                        }\r\n                    },\r\n\r\n                    this.props.accountCategory === 'admin' ?\r\n                        ({\r\n                            title: 'Xoá',\r\n                            dataIndex: 'delete',\r\n                            render: (_, record) =>\r\n                                this.state.dataSource.length >= 1 ? (\r\n                                    <Popconfirm title=\"Bạn có muốn xoá?\" onConfirm={() => this.handleDelete(record.supply_category_ID)}>\r\n                                        <a>Xoá</a>\r\n                                    </Popconfirm>\r\n                                ) : null,\r\n                        }) : undefined,\r\n                    ]\r\n                })\r\n                break\r\n            case 'room_supply':\r\n                this.setState({\r\n                    columns: [\r\n                        {\r\n                            title: 'Tên tài sản',\r\n                            dataIndex: 'supply_name',\r\n                            editable: this.props.accountCategory === \"ketoan\" ? false : true,\r\n                        },\r\n                        {\r\n                            title: 'Thuộc về',\r\n                            dataIndex: 'room_code',\r\n                            render: (_, record) => this.props.accountCategory === 'admin' ?\r\n                                (<Select defaultValue={`${record.room_category_ID}.${record.room_number}`} onChange={(values) => {\r\n                                    record.room_code = values\r\n                                    this.saveSelect(record)\r\n                                }} >\r\n                                    {\r\n                                        Array.isArray(this.props.categorys[0]) ? this.props.categorys[0].map(item =>\r\n                                            <Option value={item.key}>{item.value}</Option>\r\n                                        ) : ''\r\n                                    }\r\n                                </Select >)\r\n                                : (`${record.room_category_name} ${record.room_number}`)\r\n                        },\r\n                        {\r\n                            title: 'Trạng thái',\r\n                            dataIndex: 'state',\r\n                            editable: this.props.accountCategory === \"ketoan\" ? false : true\r\n                        },\r\n                        this.props.accountCategory === 'kithuat' ? undefined :\r\n                            {\r\n                                title: 'Chi tiết loại',\r\n                                dataIndex: 'supply_category_ID',\r\n                                render: (_, record) => {\r\n                                    if (this.props.accountCategory === 'ketoan')\r\n                                        return (<Link component={this} manage='supply_category' value={record.supply_category_ID} />)\r\n                                    else if (this.props.accountCategory === 'admin') return (\r\n                                        <Select defaultValue={record.supply_category_ID} onChange={(values) => {\r\n                                            record.supply_category_ID = values\r\n                                            this.saveSelect(record)\r\n                                        }} >\r\n                                            {\r\n                                                this.props.categorys[1] !== undefined ? this.props.categorys[1].map(item =>\r\n                                                    <Option value={item.key}>{item.value}</Option>\r\n                                                ) : ''\r\n                                            }\r\n                                        </Select >\r\n                                    )\r\n                                }\r\n                            },\r\n                        this.props.accountCategory === 'admin' ?\r\n                            ({\r\n                                title: 'Xoá',\r\n                                dataIndex: 'delete',\r\n                                render: (_, record) =>\r\n                                    this.state.dataSource.length >= 1 ? (\r\n                                        <Popconfirm title=\"Bạn có muốn xoá?\" onConfirm={() => this.handleDelete(record.supply_ID)}>\r\n                                            <a>Xoá</a>\r\n                                        </Popconfirm>\r\n                                    ) : null,\r\n                            }) : undefined,\r\n                    ]\r\n                })\r\n                break\r\n            case 'department_supply':\r\n                this.setState({\r\n                    columns: [\r\n                        {\r\n                            title: 'Tên tài sản',\r\n                            dataIndex: 'supply_name',\r\n                            editable: this.props.accountCategory === \"ketoan\" ? false : true\r\n                        },\r\n                        {\r\n                            title: 'Trạng thái',\r\n                            dataIndex: 'state',\r\n                            editable: this.props.accountCategory === \"ketoan\" ? false : true\r\n                        },\r\n                        this.props.accountCategory === 'kithuat' ? undefined :\r\n                            {\r\n                                title: 'Chi tiết loại',\r\n                                dataIndex: 'supply_category_ID',\r\n                                render: (_, record) => {\r\n\r\n                                    return (<Link component={this} manage='supply_category' value={record.supply_category_ID} text='Chi tiết' />)\r\n\r\n                                }\r\n                            },\r\n                        this.props.accountCategory === 'admin' ?\r\n                            ({\r\n                                title: 'Xoá',\r\n                                dataIndex: 'delete',\r\n                                render: (_, record) =>\r\n                                    this.state.dataSource.length >= 1 ? (\r\n                                        <Popconfirm title=\"Bạn có muốn xoá?\" onConfirm={() => this.handleDelete(record.supply_ID)}>\r\n                                            <a>Xoá</a>\r\n                                        </Popconfirm>\r\n                                    ) : null,\r\n                            }) : undefined,\r\n                    ]\r\n                })\r\n                break\r\n            default:\r\n        }\r\n    }\r\n    receiveFinished(value) {\r\n        if (value !== undefined) {\r\n            this.handleGet()\r\n        }\r\n    }\r\n    action(data) {\r\n\r\n        this.props.action(data)\r\n    }\r\n\r\n\r\n    async handleGet() {\r\n        let response = await axios.post(`${host}:5000/${this.props.manage}/getAll`, { jwt: cookies.load(\"jwt\") })\r\n        if (response.data.status) {\r\n            message.success(\"Tải danh sách thành công.\")\r\n            let data = response.data.list\r\n\r\n            this.setState({\r\n                dataSource: data\r\n            })\r\n            this.setState({ count: data.length })\r\n            this.defineColumn()\r\n        } else message.error(response.data.message)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleGet()\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.manage !== prevProps.manage ||\r\n            (this.props.finished !== prevProps.finished && this.props.finished === true)) {\r\n            this.handleGet()\r\n        }\r\n        if (this.props.search != prevProps.search) {\r\n            if (this.props.search !== undefined)\r\n                this.setState({ dataSource: this.props.search })\r\n            else this.handleGet()\r\n        }\r\n    }\r\n\r\n    handleDelete = (id) => {\r\n        axios.delete(`${host}/${this.props.manage}/${id}/${cookies.load(\"jwt\")}`).then(response => {\r\n            if (response.data.status) {\r\n                message.success(\"Xoá thành công\")\r\n                this.handleGet()\r\n            } else message.error(response.data.message)\r\n        })\r\n            .catch(err => {\r\n                message.error(err)\r\n            })\r\n    }\r\n    saveSelect(values) {\r\n        try {\r\n            Notiflix.Confirm.show(\r\n                'Xác nhận',\r\n                'Bạn có muốn lưu thông tin?',\r\n                'Đồng ý',\r\n                'Huỷ',\r\n\r\n                // ok button callback\r\n\r\n                () => {\r\n\r\n                    this.handleSave(values)\r\n                }\r\n                ,\r\n\r\n                // cancel button callback\r\n                function () {\r\n\r\n                },\r\n\r\n                // extend the init options for this confirm box\r\n                {\r\n                    width: '320px',\r\n                    borderRadius: '8px',\r\n                },\r\n            );\r\n\r\n\r\n        } catch (errInfo) {\r\n            console.log('Save failed:', errInfo);\r\n        }\r\n    }\r\n    handleSave = async (values) => {\r\n        let id = values[Object.keys(values)[0]]\r\n        delete values[Object.keys(values)[0]]\r\n\r\n        axios.put(`${host}/${this.props.manage}/${id}`, { jwt: cookies.load('jwt'), data: values }).then(response => {\r\n            if (response.data.status) {\r\n                message.success(\"Cập nhật thành công\")\r\n                this.handleGet()\r\n            }\r\n            else message.error(response.data.message)\r\n        }).catch(err => {\r\n            message.error(err)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const components = {\r\n            body: {\r\n                row: EditableRow,\r\n                cell: EditableCell,\r\n            },\r\n        };\r\n        const columns = this.state.columns.map((col) => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n            return {\r\n                ...col,\r\n                onCell: (record) => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave,\r\n                }),\r\n            };\r\n        });\r\n        return (\r\n            <div>\r\n                <Table\r\n                    components={components}\r\n                    rowClassName={() => 'editable-row'}\r\n                    bordered\r\n                    dataSource={this.state.dataSource}\r\n                    columns={columns}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Row, Col, Input, Button, message } from 'antd';\r\nimport axios from 'axios';\r\nimport cookies from 'react-cookies';\r\nconst host = 'https://' + window.location.hostname\r\n\r\nconst { Search } = Input;\r\n\r\n\r\nexport default class SearchBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChange = this.onChange.bind(this)\r\n    this.onSearch = this.onSearch.bind(this)\r\n    this.detail = this.detail.bind(this)\r\n    this.state = {\r\n      value: undefined\r\n    }\r\n  }\r\n  async componentDidUpdate(prevProps) {\r\n    if (this.props.transition !== prevProps.transition && this.props.transition !== undefined) {\r\n      cookies.save('value', this.props.transition.value)\r\n      await document.getElementsByClassName(this.props.transition.manage + '-menu')[0].click()\r\n      this.onSearch(cookies.load('value'))\r\n      this.setState({ value: '' })\r\n      cookies.remove('value')\r\n    }\r\n    else\r\n      if (this.props.manage !== prevProps.manage && this.props.transition === undefined) {\r\n        await this.setState({ value: '' })\r\n        this.setState({ value: undefined })\r\n        //this.onSearch('')\r\n      }\r\n  }\r\n\r\n  onChange = () => {\r\n    if (this.state.value !== undefined) {\r\n      this.setState({ value: undefined })\r\n      this.onSearch('')\r\n    }\r\n  }\r\n  detail = value => {\r\n    if (value !== '') {\r\n      axios.post(`${host}:5000/${this.props.manage}/detail`, { jwt: cookies.load('jwt'), value: value }).then(response => {\r\n        if (response.data.status) {\r\n          message.success(\"Tìm thành công\")\r\n          this.props.searchResult(response.data.list)\r\n        } else {\r\n          message.error(response.data.message)\r\n          this.props.searchResult(undefined)\r\n        }\r\n      }).catch(err => {\r\n        message.error(err)\r\n        this.props.searchResult(undefined)\r\n      })\r\n    }\r\n    else {\r\n      this.props.searchResult(undefined)\r\n    }\r\n  }\r\n\r\n  onSearch = value => {\r\n    if (value !== '') {\r\n      axios.post(`${host}:5000/${this.props.manage}/find`, { jwt: cookies.load('jwt'), findText: value }).then(response => {\r\n        if (response.data.status) {\r\n          message.success(\"Tìm thành công\")\r\n          this.props.searchResult(response.data.list)\r\n        } else {\r\n          message.error(response.data.message)\r\n          this.props.searchResult(undefined)\r\n        }\r\n      }).catch(err => {\r\n        message.error(err)\r\n        this.props.searchResult(undefined)\r\n      })\r\n    }\r\n    else {\r\n      this.props.searchResult(undefined)\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Row>\r\n\r\n        <Col span={24}>\r\n          <Search\r\n            value={this.state.value}\r\n            placeholder=\"input search text\"\r\n            allowClear\r\n            enterButton=\"Search\"\r\n            size=\"large\"\r\n            onChange={this.onChange}\r\n            onSearch={this.onSearch}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport EditAbleTable from './EditAbleTable'\r\nimport { Row, Col, message } from 'antd'\r\nimport Modal from './OpenModal';\r\nimport SearchBox from './SearchBox'\r\nimport axios from 'axios'\r\nimport cookies from 'react-cookies'\r\nconst host = 'https://' + window.location.hostname\r\n\r\n\r\nconst DashboardContent = (props) => {\r\n    const [categorys, setCategory] = useState([])\r\n    const [finished, setFinished] = useState(false)\r\n    const [searchResults, setSearchResults] = useState(undefined)\r\n    const [transition, setTransition] = useState(undefined)\r\n    const receiveFinished = async (value) => {\r\n        setFinished(value)\r\n        if (value) await setTimeout(() => { setFinished(false) }, 1000)\r\n    }\r\n    const receiveSearchResult = (value) => {\r\n        setSearchResults(value)\r\n    }\r\n    const receiveAction = (data) => {\r\n        if (data.path !== undefined) {\r\n            if (data.action === undefined)\r\n                axios.put(`${host}${data.path}`, { jwt: cookies.load('jwt') }).then(async response => {\r\n                    if (response.data.status) {\r\n                        setFinished(true)\r\n                        await setTimeout(() => { setFinished(false) }, 1000)\r\n                    } else message.error(response.data.message)\r\n                })\r\n            else if (data.action === 'post') {\r\n                axios.post(`${host}${data.path}`, { amount: data.value }).then(async response => {\r\n                    if (response.data.status) {\r\n                        setFinished(true)\r\n                        await setTimeout(() => { setFinished(false) }, 1000)\r\n                        if (data.path === '/payment') {\r\n                            window.location = response.data.order_url\r\n                        }\r\n                    } else message.error(response.data.message)\r\n                })\r\n            }\r\n        }\r\n\r\n    }\r\n    const receiveTransition = async (transit) => {\r\n        if (transit !== undefined) {\r\n            setTransition(transit)\r\n            await setTimeout(() => { setTransition(undefined) }, 2000)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(async () => {\r\n        if (cookies.load('jwt') !== undefined)\r\n            switch (props.menu) {\r\n                case 'account':\r\n                    axios.post(host + '/account_category', { jwt: cookies.load('jwt') }).then(response => {\r\n                        if (response.data.status) {\r\n                            let temp = []\r\n                            response.data.categorys.map(item => {\r\n                                temp.push({ key: item.category_ID, value: item.category_name })\r\n                            })\r\n                            setCategory(temp)\r\n                        } else message.error(response.data.message)\r\n                    })\r\n                    break\r\n                case 'customer':\r\n                case 'room':\r\n                    axios.post(host + '/room_category/getAll', { jwt: cookies.load('jwt') }).then(response => {\r\n                        if (response.data.status) {\r\n                            let temp = []\r\n                            response.data.list.map(item => {\r\n                                temp.push({ key: item.room_category_ID, value: item.room_category_name, max: item.available })\r\n                            })\r\n                            setCategory(temp)\r\n                        } else message.error(response.data.message)\r\n                    })\r\n                    break\r\n                case 'order':\r\n                    axios.post(host + '/customer/getAll', { jwt: cookies.load('jwt') }).then(response => {\r\n                        if (response.data.status) {\r\n                            let temp = []\r\n                            response.data.list.map(item => {\r\n                                temp.push({ key: item.customer_ID, value: item.customer_name })\r\n                            })\r\n                            setCategory(temp)\r\n                        } else message.error(response.data.message)\r\n                    })\r\n                    break\r\n                case 'service':\r\n                    axios.post(host + '/account/find', { jwt: cookies.load('jwt'), findText: 'dichvu' }).then(response => {\r\n                        if (response.data.status) {\r\n                            let temp = []\r\n                            response.data.list.map(item => {\r\n                                temp.push({ key: item.account_ID, value: item.username })\r\n                            })\r\n                            setCategory(temp)\r\n                        } else message.error(response.data.message)\r\n                    })\r\n                    break\r\n                case 'order_detail':\r\n                case 'service_detail':\r\n                    axios.post(host + '/service/getAll', { jwt: cookies.load('jwt') }).then(response => {\r\n                        if (response.data.status) {\r\n                            let temp = []\r\n                            response.data.list.map(item => {\r\n                                if (props.menu === 'order_detail') {\r\n                                    if (item.state === 'availabled')\r\n                                        temp.push({ key: item.service_ID, value: item.service_name })\r\n                                }\r\n                                else\r\n                                    temp.push({ key: item.service_ID, value: item.service_name })\r\n                            })\r\n                            setCategory(temp)\r\n\r\n                        } else message.error(response.data.message)\r\n                    })\r\n                    break\r\n                case 'room_supply':\r\n                    if (props.category === 'ketoan');\r\n                    else {\r\n                        let doubleCategory = []\r\n                        axios.post(host + '/room/getAll', { jwt: cookies.load('jwt') }).then(async response => {\r\n                            if (response.data.status) {\r\n                                let temp = []\r\n                                response.data.list.map(item => {\r\n                                    temp.push({ key: `${item.room_category_ID}.${item.room_number}`, value: `${item.room_category_name} ${item.room_number}` })\r\n                                })\r\n                                doubleCategory.push(temp)\r\n                                await axios.post(host + '/supply_category/getAll', { jwt: cookies.load('jwt') }).then(response => {\r\n                                    if (response.data.status) {\r\n                                        let temp = []\r\n                                        response.data.list.map(item => {\r\n                                            if (item.supply_type === 'room')\r\n                                                temp.push({ key: item.supply_category_ID, value: item.supply_category_name })\r\n                                        })\r\n                                        doubleCategory.push(temp)\r\n\r\n                                    } else message.error(response.data.message)\r\n                                })\r\n                                setCategory(doubleCategory)\r\n                            } else message.error(response.data.message)\r\n                        })\r\n\r\n                    }\r\n\r\n                    break\r\n                case 'department_supply':\r\n                    axios.post(host + '/supply_category/getAll', { jwt: cookies.load('jwt') }).then(response => {\r\n                        if (response.data.status) {\r\n                            let temp = []\r\n                            response.data.list.map(item => {\r\n                                if (item.supply_type === 'department')\r\n                                    temp.push({ key: item.supply_category_ID, value: item.supply_category_name })\r\n                            })\r\n                            setCategory(temp)\r\n                        } else message.error(response.data.message)\r\n                    })\r\n\r\n                    break\r\n                default:\r\n            }\r\n    });\r\n\r\n    if (props.menu !== '') {\r\n        let result = [];\r\n        switch (props.menu) {\r\n            case 'account':\r\n                result.push(<Row>\r\n                    <Col span={8}>\r\n                        <Modal title=\"Thêm tài khoản\" manage={props.menu} categorys={categorys} finished={receiveFinished} />\r\n                    </Col>\r\n                    <Col span={8} offset={8}>\r\n                        <SearchBox manage={props.menu} transition={transition} searchResult={receiveSearchResult} />\r\n                    </Col>\r\n                </Row>)\r\n                break\r\n            case 'customer':\r\n                result.push(<Row>\r\n                    <Col span={8}>\r\n                        <Modal title=\"Thêm khách hàng\" manage={props.menu} finished={receiveFinished} />\r\n                    </Col>\r\n                    <Col span={8} offset={8}>\r\n                        <SearchBox manage={props.menu} transition={transition} searchResult={receiveSearchResult} />\r\n                    </Col>\r\n                </Row>)\r\n                break\r\n            case 'room_category':\r\n                if (props.category !== 'letan')\r\n                    result.push(<Row>\r\n                        <Col span={8}>\r\n                            <Modal title=\"Thêm loại phòng\" manage={props.menu} finished={receiveFinished} />\r\n                        </Col>\r\n                        <Col span={8} offset={8}>\r\n                            <SearchBox manage={props.menu} transition={transition} searchResult={receiveSearchResult} />\r\n                        </Col>\r\n                    </Row>)\r\n                break\r\n            case 'room':\r\n                result.push(<Row>\r\n                    <Col span={8}>\r\n                        <Modal title=\"Thêm phòng\" manage={props.menu} transition={transition} categorys={categorys} finished={receiveFinished} />\r\n                    </Col>\r\n                    <Col span={8} offset={8}>\r\n                        <SearchBox manage={props.menu} transition={transition} searchResult={receiveSearchResult} />\r\n                    </Col>\r\n                </Row>)\r\n                break\r\n            case 'order':\r\n                result.push(<Row>\r\n                    <Col span={8}>\r\n                    </Col>\r\n                    <Col span={8} offset={8}>\r\n                        <SearchBox manage={props.menu} transition={transition} searchResult={receiveSearchResult} />\r\n                    </Col>\r\n                </Row>)\r\n                break\r\n            case 'order_detail':\r\n                result.push(<Row>\r\n                    <Col span={8}>\r\n                    </Col>\r\n                    <Col span={8} offset={8}>\r\n                        <SearchBox manage={props.menu} transition={transition} searchResult={receiveSearchResult} />\r\n                    </Col>\r\n                </Row>)\r\n                break\r\n            case 'service':\r\n                result.push(<Row>\r\n                    <Col span={8}>\r\n                        {\r\n                            props.category === 'admin' ? <Modal title=\"Thêm dịch vụ\" categorys={categorys} manage={props.menu} finished={receiveFinished} /> : ''\r\n                        }\r\n                    </Col>\r\n                    <Col span={8} offset={8}>\r\n                        <SearchBox manage={props.menu} transition={transition} searchResult={receiveSearchResult} />\r\n                    </Col>\r\n                </Row>)\r\n                break\r\n            case 'service_detail':\r\n                result.push(<Row>\r\n                    <Col span={8}>\r\n\r\n                    </Col>\r\n                    <Col span={8} offset={8}>\r\n                        <SearchBox manage={props.menu} transition={transition} searchResult={receiveSearchResult} />\r\n                    </Col>\r\n                </Row>)\r\n                break\r\n            case 'service_detail':\r\n                result.push(<Row>\r\n                    <Col span={8}>\r\n\r\n                    </Col>\r\n                    <Col span={8} offset={8}>\r\n                        <SearchBox manage={props.menu} transition={transition} searchResult={receiveSearchResult} />\r\n                    </Col>\r\n                </Row>)\r\n                break\r\n            case 'supply_category':\r\n                result.push(<Row>\r\n                    <Col span={8}>\r\n                        {\r\n                            props.category === 'admin' ? <Modal title=\"Thêm loại tài sản\" manage={props.menu} finished={receiveFinished} /> : ''\r\n                        }\r\n                    </Col>\r\n                    <Col span={8} offset={8}>\r\n                        <SearchBox manage={props.menu} transition={transition} searchResult={receiveSearchResult} />\r\n                    </Col>\r\n                </Row>)\r\n                break\r\n            case 'room_supply':\r\n                result.push(<Row>\r\n                    <Col span={8}>\r\n                        {\r\n                            props.category === 'ketoan' ? '' : <Modal title=\"Thêm tài sản phòng\" categorys={categorys} manage={props.menu} finished={receiveFinished} />\r\n                        }\r\n                    </Col>\r\n                    <Col span={8} offset={8}>\r\n                        <SearchBox manage={props.menu} transition={transition} searchResult={receiveSearchResult} />\r\n                    </Col>\r\n                </Row>)\r\n                break\r\n            case 'department_supply':\r\n                result.push(<Row>\r\n                    <Col span={8}>\r\n                        {\r\n                            props.category === 'admin' ? <Modal title=\"Thêm tài sản khách sạn\" categorys={categorys} manage={props.menu} finished={receiveFinished} /> : ''\r\n                        }\r\n                    </Col>\r\n                    <Col span={8} offset={8}>\r\n                        <SearchBox manage={props.menu} transition={transition} searchResult={receiveSearchResult} />\r\n                    </Col>\r\n                </Row>)\r\n                break\r\n            default:\r\n        }\r\n        result.push(<EditAbleTable categorys={categorys} manage={props.menu} accountCategory={props.category} finished={finished} search={searchResults} action={receiveAction} transition={receiveTransition} />)\r\n        return result\r\n    }\r\n    else return ''\r\n\r\n\r\n}\r\nexport default DashboardContent\r\n","import React, { useState,useEffect } from 'react'\r\nimport { Layout } from \"antd\";\r\nimport DashboardSider from '../components/DashboardSider'\r\nimport DashboardContent from '../components/DashboardContent';\r\nconst { Sider, Content } = Layout;\r\n\r\nconst DashboardPage = (props) => {\r\n    const [menu,setMenu]=useState('')\r\n    const [category,setCategory] =useState('')\r\n    const recieveMenu=(path)=>{\r\n        setMenu(path)\r\n        \r\n    }\r\n    const recieveCategory=(cat)=>{\r\n        setCategory(cat)\r\n    }\r\n    //useEffect(())\r\n    return (\r\n        <Layout>\r\n            <Sider className=\"side-left\">\r\n                <DashboardSider menu={recieveMenu} category={recieveCategory}/>\r\n            </Sider>\r\n            <Content>\r\n                <DashboardContent menu={menu} category={category}/>\r\n            </Content>\r\n        </Layout>\r\n    )\r\n\r\n}\r\nexport default DashboardPage\r\n","import React, { Component } from 'react'\r\nimport { Form, Input, Button, Checkbox, message } from 'antd';\r\nimport axios from 'axios'\r\nimport cookies from 'react-cookies'\r\nconst host = 'https://' + window.location.hostname\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nexport default class ActiveAccountForm extends Component {\r\n    onFinish = (values) => {\r\n        \r\n        if (values.newPassword === '') {\r\n            message.error(\"Mật khẩu rỗng\")\r\n        }\r\n        else if (values.newPassword !== values.newPasswordConfirm) {\r\n            message.error(\"Mật khẩu xác nhận không khớp\")\r\n        } else {\r\n            axios.post(host + '/account/login', values).then( async res => {\r\n                \r\n                if (res.data.status) {\r\n                    console.log(res.data)\r\n                    message.success(\"Active successful!\")\r\n                    setTimeout(() => {\r\n                        window.location.reload()\r\n                        window.location = '/login'\r\n                    }, 2000)\r\n                }\r\n                else {\r\n                    message.success(\"Active fail!\")\r\n                    message.error(res.data.message)\r\n                }\r\n            }).catch(err => {\r\n                message.error(`${err}`)\r\n            })\r\n        }\r\n       \r\n\r\n    };\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log(errorInfo)\r\n    };\r\n    componentDidMount(){\r\n        var keys = Object.keys(cookies.loadAll())\r\n        keys.forEach(key => {\r\n          cookies.remove(key)\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={this.onFinish}\r\n                onFinishFailed={this.onFinishFailed}\r\n\r\n            >\r\n                <Form.Item\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Mã kích hoạt\"\r\n                    name=\"activeCode\"\r\n                    rules={[{ required: true, message: 'Please input your mã kích hoạt!' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Mật khẩu mới\"\r\n                    name=\"newPassword\"\r\n                    rules={[{ required: true, message: 'Please input your password!' }]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Xác nhận mật khẩu mới\"\r\n                    name=\"newPasswordConfirm\"\r\n                    rules={[{ required: true, message: 'Please input your password!' }]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n\r\n\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Col, Row } from \"antd\";\r\nimport ActiveAccountForm from '../components/ActiveAccountForm';\r\n\r\nexport default class ActiveAccountPage extends Component {\r\n    render() {\r\n        return (\r\n            <Row className=\"login-container\">\r\n            <Col offset={8} className=\"login-form-wrapper\" span={8}>\r\n                <h1>ACIVE ACCOUNT</h1>\r\n                <ActiveAccountForm />\r\n            </Col>\r\n        </Row>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, Input, Button, Checkbox, message } from 'antd';\r\nimport axios from 'axios'\r\nimport cookies from 'react-cookies'\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nexport default class LoginForm extends Component {\r\n    onFinish = (values) => {\r\n        if (values.username != '' && values.password != '') {\r\n            const host = 'https://' + window.location.hostname\r\n            axios.post(host + '/account/login', values).then(res => {\r\n                if (res.data.status) {\r\n                    message.success(\"Login successful!\")\r\n                    cookies.save('jwt', res.data.token)\r\n                    cookies.save('username', res.data.username)\r\n                    setTimeout(() => {\r\n                        window.location.reload()\r\n                        window.location = '/dashboard'\r\n                    }, 1000)\r\n                }\r\n                else message.error(res.data.message)\r\n            }).catch(err => {\r\n                message.error(`${err}`)\r\n            })\r\n        }\r\n    };\r\n    render() {\r\n        return (\r\n            <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={this.onFinish}\r\n            >\r\n                <Form.Item\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    rules={[{ required: true, message: 'Please input your password!' }]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n                    <Checkbox>Remember me</Checkbox>\r\n                </Form.Item>\r\n\r\n                <Form.Item {...tailLayout} name=\"forget\" >\r\n                    Liên hệ bộ phận nhân sự nếu quên thông tin tài khoản\r\n                </Form.Item>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Col, Row } from \"antd\";\r\nimport LoginForm from '../components/LoginForm';\r\nimport '../css/LoginPage.css';\r\n\r\n\r\nexport default class LoginPage extends Component {\r\n    render() {\r\n        return (\r\n            <Row className=\"login-container\">\r\n                <Col offset={8} className=\"login-form-wrapper\" span={8}>\r\n                    <h1>LOGIN</h1>\r\n                    <LoginForm />\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n","import \"antd/dist/antd.css\";\nimport { Layout } from \"antd\";\nimport './App.css';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Navigator from \"./components/Navigator\"\nimport HomePage from \"./pages/HomePage\"\nimport DashboardPage from \"./pages/DashboardPage\"\nimport ActiveAccountPage from \"./pages/ActiveAccountPage\"\nimport LoginPage from \"./pages/LoginPage\";\nconst { Header, Footer, Content } = Layout;\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Header className=\"header-wrapper\">\n        <Navigator />\n        </Header>\n        <Content className=\"content-wrapper\">\n          <Route exact path='/'>\n            <HomePage />\n          </Route>\n          <Route path='/dashboard'>\n            <DashboardPage />\n          </Route>\n          <Route exact path='/login'>\n            <LoginPage />\n          </Route>\n          <Route path='/login/active'>\n            <ActiveAccountPage />\n          </Route>\n        </Content>\n      </Layout>\n      <Footer>\n        <h1>Copyright © 2021 SunPear</h1>\n      </Footer>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}